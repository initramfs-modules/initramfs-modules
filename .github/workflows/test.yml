name: Test
run-name: Test ${{ inputs.test }} on ${{ inputs.container }}

# todo
# https://stackoverflow.com/questions/65384420/how-to-make-a-github-action-matrix-element-conditional

on:
    workflow_dispatch:
        inputs:
            test:
                description: "Array of tests to run, such as [11,12]"
                default: "['00']"
                required: true
            container:
                type: choice
                description: distro
                default: alpine-kernel-tiny
                options:
                    - alpine-kernel-tiny

env:
    DEBUGFAIL: "${{ secrets.ACTIONS_STEP_DEBUG && 'rd.debug rd.udev.debug rd.live.debug rd.info console=ttyS0,115200n81 rd.retry=2' }}"

jobs:
    test:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            matrix:
                test: ${{ fromJSON(inputs.test) }}
            fail-fast: false
        container:
            image: ghcr.io/${{github.repository_owner}}/${{inputs.container}}
            options: "--privileged -v /dev:/dev"
        steps:
            -   name: "Checkout Repository"
                uses: actions/checkout@v3
                with:
                  submodules: true

                # patch the dracut installation with dracut submodule and initramfs-modules repo
            -   name: "Install dracut tests"
                run: |
                   cp -a /__w/initramfs-modules/initramfs-modules/dracut/test/* /__w/initramfs-modules/initramfs-modules/test/
                   #cp -a /__w/initramfs-modules/initramfs-modules/test/* /usr/lib/dracut/test/

#            -   name: "Uninstall systemd dependent dracut modules"
#                run: |
#                  rm -rf /usr/lib/dracut/modules.d/*systemd*
#                  for f in 06rngd 06dbus-broker 06dbus-daemon 09dbus 35connman \
#                    35network-manager 35network-wicked 62bluetooth 80lvmmerge \
#                    91fido2 91pcsc 91pkcs11 91tpm2-tss 99memstrack 99squash; do
#                    rm -rf /usr/lib/dracut/modules.d/$f
#                  done
#
#            -   name: "Setup running tests"
#                run: cp /usr/bin/dracut /usr/lib/dracut/dracut.sh

            -   name: "${{ inputs.container }} ${{ inputs.test }}"
                run: cd /__w/initramfs-modules/initramfs-modules/ && ./test/test.sh "TEST-${{ matrix.test }}" ${{ matrix.test }}
